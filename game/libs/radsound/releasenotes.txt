================================================================================
RadSound Release Notes
================================================================================

-------------------------------------------------------------------------------
Version: 
Date:    Pending
-------------------------------------------------------------------------------

January 24, 2003 RWS *PATCHED* 
    * Fixed indexing problem in rolloff table

January 17, 2003 RWS *PATCHED* To release below

    * Fixed state transition of wmafiledatasource (xbox) to behave like the 
      rsdfiledatasource.

January 13, 2003 RWS *PATCHED* To release below

    * IRadSoundHalSystem::SystemDescription structure only includes parameters
      for the platforms that support them (sampling rate and system memory params
      now only exist on certain platforms)
    * IRadSoundHalSystem::Initialize() argument is now const

January 10, 2003 TH *PATCHED* To release below

    * FileDataSource - only opens file when data is requested.  This solved
      some 'CD thrashing' and 'number of open file' type problems noticed int
      the music libraries.
      
January 9, 2003 RWS *PATCHED* To release below

    * IRadSoundHalBuffer::ReSetAudioFormat() now pure virtual function
    * Decreased stack size of ps2 voice and load threads (43K to 4K)

-------------------------------------------------------------------------------
Version:    07-01-2003
Date:       January 07, 2003
-------------------------------------------------------------------------------

January 7, 2003 TH

    * Fixed rmcompile to allow for 10% click/pop error.
    
January 2, 2003 RWS

	* Fixed radSoundEffectGcn::GetAnalogParam to return correct value
	* Fixed IRadSoundHalSystem::GetAuxEffect( ) to return same pointer that 
	  was given in IRadSoundHalSystem::SetAuxEffect( )
	* Removed dynamic casts that occurred (rarely) in ps2, gcn, and xbox effect
	  systems
	* Added some internal platform dependent functions to IRadSoundHalEffect
	  (this allowed the preceeding bug fixes)

December 24, 2002 RWS

	* IMPORTANT: As of this changelist you will need to link sdks/win32/eax2/libs
	  into your pc projects (eax.lib & eaxguid.lib)

	* Changed IRadSoundHalSystem::InitializeMemory( ) to
	  IRadSoundHalSystem::Initialize( ).  The new functions takes a SystemDescription
	  struct as its only parameter.  Fill the SystemDescription sturct with appropriate
	  initialization values for the system.  Now we won't have a big list of 
	  booleans and ints.
	  
	* Added pc system initialization boolean parameter m_EnableStickyFocus.  If true,
	  sound will be played even when the window for your application does not have
	  the focus.  If false, all sounds will be muted when your window loses focus.

	* Imlemented pc environmental reverb support using Creative EAX 2.0
      
      This is available through Listener::SetEnvironmentAuxSend() and 
      Listener::SetEnvEffectsEnabled())

	  Some sound cards may not support reverb.  Also Windows2000 defaults
	  to not allowing advanced hardware functionality of sound cards.  So 
	  users must go to "Sounds and multimedia" under control panel, select the
	  "Audio" tab, click the "Advanced" button under "Sound Playback", select the
	  "Performance" tab, and slide the "Hardware Acceleration" slider to "Full"
	  
	  Note that calling SetAuxGain() or SetAuxMode() on any class (player, system)
	  will result in a warning on the PC.  These functions are not supported.
	  
	* Added new file radsound_win32.hpp to hold effect inteface
	
	* Created new interface IRadSoundHalEffectEAX2Reverb for specifying effect 
	  parameters.  
	 
	  Parameters can be changed dynamically on an active effect and it the sound
	  card will be updated.  Clients can ramp their parameter changes to allow 
	  for smooth transitions from environment to environment. 
	  
	  Preset effects can also be swapped as the environment changes.  In this case
	  the sound card will be updated all in one shot.
	
	* Removed pc system::GetReservedMemory( )
	
	* Removed IRadSoundHalSystem::GetReferenceClock( )
	  
December 23, 2002 RWS
	* split win32 sound system into hpp and cpp files
	* win32 stopped internal use of intfaces (removed IRadSoundHalSystemWin)
	* added parameter to IDirectSound3DBuffer creation to stop peforming 3D
	  calculations and mute sources that are beyond the max distance

December 20, 2002 RWS
	* REQUIRED FIX.  Recompiled radsound.irx.  
	
	  Sony QA recently discovered that certain games 
	  that had passed QA on debug systems did not work on some consumer consoles.  
	  This was due to unusual IOP relocations generated by one of SN Systems' tools.
	  
	  Previous versions of radsound.irx were compiled with the faulty tool.  All
	  games must use this new version.

-------------------------------------------------------------------------------
Version:    10-12-2002
Date:       December 10, 2002
-------------------------------------------------------------------------------

December 9, 2002 PS
	* Fixed WMA support.

December 9, 2002 RWS
	* Added sampling rate paramater to IRadSoundHalSystem::InitializeMemory()
	  to expose control of the final mix buffer on pc.  You should set this 
	  to the highest sampling rate used by your game (probably 48000Hz).  Must
	  be set to 0 on all other platforms

	* PC IDirectSoundBuffer creation parameters changed (internal):
		- Added DSBCAPS_GETCURRENTPOSITION2 will improve accuracy of GetCurrentPosition
		- Added DS3DALG_NO_VIRTUALIZATION improve performance of software positional voices

December 6, 2002 RWS
	* IRadSoundClip: now goes into the 'Initializing' when Initialize() is called

	* PC implementation improvements:
	    - Clips now use hardware voices when possible
	    - Removed 'STICKY_FOCUS' option from IDirectSoundBuffer creation params
	    - Removed use of deprecated function IDirectSound::DuplicateBuffer()
	    - Removed unnecessary creation and deletion of IDirectSoundBuffers
	    - Implemented voice priority
		- Required change of internal interface IRadSoundHalBuffer::Initialize
		  to indicate streaming/non-streaming (ignored on other platforms)
		- Added internal debug info for voice usage, audio card capabilities, etc. 

November 29, 2002 RWS
	* PC ps2 & gcn volume falloff behaviour vs distance uses same curve as XBox

-------------------------------------------------------------------------------
Version:    26-11-2002
Date:       November 26, 2002
-------------------------------------------------------------------------------

November 25, 2002 RWS
	* Properly fixed gcn dsp sample rate

-------------------------------------------------------------------------------
Version:    12-11-2002
Date:       November 12, 2002
-------------------------------------------------------------------------------

November 11, 2002 PS

    * Turned on buffered reading in sound.

November 6, 2002 RWS

    * Gamecube: nintendo no longer supports DSP sample rate of 48kHz.  Removed 
      this argument from radSoundSystem::InitializeMemory.  Always 32kHz now.

-------------------------------------------------------------------------------
Version:    29-10-2002
Date:       October 29, 2002
-------------------------------------------------------------------------------

October 25, 2002

    * Fixed problem with software listener (PS2/GAMECUBE) where Calculate
      PositionalPan() was asserting that the calculated pan was not beteen
      -1 and 1.  The problem was due to round-off error in the floating point
      calculation (the mathematics were technically correct).  Added clamp and
      EPSILON test.

-------------------------------------------------------------------------------
Version: 15-10-2002
Date:    October 15, 2002
-------------------------------------------------------------------------------

October 02, 2002 TH

	* GameCube: Fixed problem with voice::GetPlaybackPosition( ) asserting with
	  ADPCM data.

	* GameCube: Fixed streamer so it didn't realloc the buffer when playing a
	  new instance of ADPCM data.


-------------------------------------------------------------------------------
Version: 4.2 - Pending
Date:    October 1, 2002 (FTech 3.7)
-------------------------------------------------------------------------------

September 30, 2002 RWS

    * XBox, Ps2, GameCube surround sound supported and verified
    * Enabled gamecube surround mode

September 23, 2002 RWS

    * Implemented Dolby Prologic II for Ps2 positional voices.  Enable using
      IRadSoundHalSystem::SetOutputMode

-------------------------------------------------------------------------------
Version: 4.1 
Date:    August 6, 2002 (FTech 3.5)
-------------------------------------------------------------------------------

August 1, 2002 TH

	* Clean up warnings on Ps2 (-Wall) is now specified.

	* !Interface Change! : Removed last remaining /util substytem functions.
	  Games should integrate these components into their own game libraries
	  for backwards compatibility.

	* !Interface Change! : Removed Register/UnRegisterStateCallback() from
	  IRadSoundStreamPlayer, IRadSoundClipPlayer, IRadSoundClip.  State
	  callbacks have historically caused memory fragmentation, poor
	  performance, complicated component implementation, and are generally
	  error prone due to problems with calling back into an object during
	  its callback.  You must rewrite your system to avoid using state
	  callbacks, call ::GetState() instead.  This change had do be done
	  sometime and could cause a few integration problems--the daSound layer
	  makes heavy use of state callbacks. 

July 29, 2002 TH

	* Solution for "DSOUND: CMcpxVoiceClient::WaitForVoiceOff: Warning:
	  Busy-waiting for the voice to turn off" blocking problem.  radsound now
	  delays releasing a voice until it has truly stopped playing.

July 23, 2002 TH
	
	* Fixed problem with streamer Reset() failing under some timing conditions.
	  This was due to an assumption on win32 that memory to memory transfers
	  were asynchronous.

	* Added WARNING message to radsoundtools.dll if the first and last sample
	  of the .wav file being converted are not silence.  This is to solve
	  clicking and popping problems due to amplitude square waves being
	  injected into the system by bad data.
	  
	* Added check in tool for corrupted .wav data where the number of bytes
	  in the data chunk is not a multiple of a sample block.

July 17, 2002 TH

	* radsoundtools.dll now checks the date of itself to determine if a file is
	  out of date.  Previously it was checking the parent .exe date which was
	  not correct.

July 16, 2002 TH

	* Fix Ps2 .rsd converter to insert manditory row of zeros to avoid clicking
	  when starting the sample.

July 11, 2002 TH

	* Add rstSetConvertFileProgressCallback() to update display in gui programs
	  that use radsoundtools library.

July 2, 2002 RWS

    * Ps2 effects now use transfer channel 1 to clear work area.  The ps2 effects
      now have exclusive control of channel 1.  If you are using the old movie 
      player, you must guarantee that effect parameters will not be changed during
      the playback of a movie.

June 28, 2002 TH

	Positional Roll Off Curve
	-------------------------

		* XBOX: Move to new SetRollOffCurve() feature of direct sound.  We now
		  pass in array a points on a curve which DircectSoundWill linearly
		  interpolate.

		* PS2/GAMECUBE: Use roll-off curve (same as xbox) points to calcualte
		  positional fall-off over distance.


-------------------------------------------------------------------------------
Version: 4.0
Date:    June 17, 2002 (FTech 3.4)
-------------------------------------------------------------------------------

June 6, 2002 TH

	* PS2: Remove voice-register EE <--> IOP synch stalls.  Voice status
	  communication is now completely asynchronous.  This could improve
	  game's frame rate by up to .5 milliseconds-per frame.

	* Decrease IOP-load thread priority to NORMAL - 1 to avoid sony
	  *PADMAN VBLANK OVERLAP* messages.

	* Fix problem where PS2 voice wouldn't free up hardware voice unless 
	  IsPlaying() was called by client.

	* Remove MultiInputKnob from radsoundutil.  Users of daSound layer must
	  now make a copy of and maintain this code as part of the daSound layer.
	
June 4, 2002 TH

	* Add skipping warnings to printout in streamer.  The streamer will now
	  warn the game programmers when it has skipped due to poor servicing
	  time and/or poor loading performance.

	* resolve servicing dependency between file-data source becoming
	  initialized and the stream player issuing the first load.  This results
	  in one less game-loop when queing up the streamer.

	* increase IOP transfer buffer size to avoid chunking up stream reads and
	  thereby decreasing performance.

May 30, 2002 TH

	* Dramatically reduce radsound.irx memory usage.  The ps2 now chunks-up
	  loads and clears into n size blocks.  The iop module now dynamically
	  allocates buffers bassed on sound system initialization parameters.
	  Thus we can now tune performance vs. memory usage for sound loading.
	  The iop memory usage went from about 1Meg to about 160K using default
	  sized clear/transfer/interleave buffers.

	* Re-wrote uninterleaving algorithm and obtained better performance.

	* Profiled uninterleaving and Iop-->Spu Dma transfers.  Iop now can
	  interleave ~10megs per-second of multi-channel data.  The Dma unit
	  from Iop-->Spu memory is extremely slow due to slow spu memory
	  (original playstaion specs).  Max throughput seems to be about 1.2
	  Megs per second which is ~8 times slower that our uninterleaving
	  algorithm.  This proves that the Iop processor uninterleaving code
	  is certainly not causing bottlenecks in the ps2 soundsystem or
	  performance problems on the ps2 in general.

	* General radsound.irx cleanup.

May 29, 2002 PS

	* fixed inline warnings for gcc

May 28, 2000 TH

	* rsd file data source now prints out warnings if it asked to read
	  non-optimally.

	* Fix stream player and buffered data source so that they issue
	  radSoundStreamReadMultipleGet( ) and radSoundStreamReadAlignemtGet()
	  size/aligned chunks of data to optimize CD performance.

	* Fix ps2 buffer loading so that is completely asyncronous and iop module
	  is not driven from EE Rpc calls.  This involved reworking the ps2
	  radsound.irx module to using blocking calls on threads and Iop --> Ee Rpc
	  events to signal end of async operation.  This was a previously a
	  significant performance bottleneck.  The Ee now runs 1 thread that
	  blocks waiting for Iop's done event instead of polling the .irx
	  module.

May 15, 2002 TH

	* Fix problem in clip player where calling Stop() would set the voice's
	  playback position to zero.  The correct behavior is to allow the user
	  to Play() the clip from where it was Stop()ped.

May 9, 2002 TH

	* Fixed crash in streamplayer if GetPlaybackTimInSamples() was called
	  before the stream player was finished asynchronously initializing.

	* Added warning if game stops a voice in the middle without first
	  fading the volume to zero.  This will cause a square wave in the audio
	  output (pops & clicks).  It is a potential TRC violation on all
	  platforms and is very common mistake to make.

	* Added a run-time waring if a game sets the trim/volume/auxgain of a voice
	  while playing if the change in value is greater than a safe threshold.
	  If the volume is changed to quickly pops & clicks will be introduced
	  into the audio stream.  This is a potential TRC violation and thus must
	  be fixed.

-------------------------------------------------------------------------------
Version: 3.8
Date:    May 8, 2002 (FTech 3.3)
-------------------------------------------------------------------------------

May 7, 2002 TH
	
	* Better fix for radSoundStitchedDataSource::Reset( ).

	* Created a serialized execution queue of windows buffer-loader objects,
	  previously a loader object would spuriously assert that Lock() failed
	  because some portion of the buffer was already lock by a previous
	  load request.

May 6, 2002 TH

	* Fix problem with radSoundStitchedDataSource::Reset().  When Reset()
	  was called and there was a load outstanding, the streamer would
	  release the callback object prematurely.  This could cause the
	  file system to write into memory that was freed when the
	  object supporting the IRadSoundHalDataSource was released.  This
	  was only a problem in games (such as DA) where they where allocating
	  and freeing buffereddatasource objects on the fly--which is very
	  bad practice to begin with.

	* Fix problem with radSoundStreamPlayer::GetPlaybackTimeInSamples( ).
	  Previously the streamer would report time going backwards for a brief
	  instant as the stream was ending.

May 2, 2002 TH

	* !Interface Change! - IRadSoundDataCache::CreateDataSource( ) now takes
	  the starting frame as a parameter.  This will not affect game code,
	  because this object is only currently used by radmusic.  This change
	  was made to allow radmusic to resume a region from where it left off.

	* Minor fixes to buffered data source's low water mark, was previously
	  using compiler generated int to float and float to int.

	* Added IRadSoundStreamPlayer::SetLowWaterMark( ).  You can now control
	  the data request behavior of the stream player so that it only askes for
	  data when it is x% full.

	* Cleaned up and modularized stream player code so that is is more
	  readable and maintainable.

May 1, 2002 TH

	* Fixed stream player end of stream detection.  Previously the stream player
	  would end slightly before the stream ended on some platforms.

	* !Behavior Change! - Stream player DOES NOT go immediately into the
	  "NoSource" state if you pass it an 0 size (empty) data source.  You must
	  now explicitly play the zero size data.  This makes client logic much
	  more consistent.

May 1, 2002 RWS

    * Fixed a bug that showed up when the streamplayer was playing a filedatasource
      directly.  The tail end of the data would loop indefinitely and never stop.

    * Changed the behaviour of the IRadSoundHalBuffer (internal interface).  When
      the buffer cannot load enough frames from its datasource to satify a load 
      request, the buffer with ensure that the request is satisfied by padding the
      data with silence.

April 29, 2002 RWS
	
    * !Interface Name Change! - Renamed the IRadSoundFileDataSource interface
      (and all related files and classes to IRadSoundRsdFileDataSource.  
      This makes room for other types of FileDataSources.

    * !Interface Change! - Added SetLowWaterMark( ) and GetLowWaterMark( )
      to IRadSoundBufferedDataSource interface.  Low water mark is a measure
      of how little fresh data the buffered data source will hold before refilling
      itself.  It is a percentage of the buffer size and is measured from 0 to 1.

April 26, 2002 TH

	* !Interface Change! - Added IRadSoundHalAudioFormat* param to
	  IRadSoundHalBuffer::Initialize( ).   Previously, the memory was not
	  allocated for the buffer until the input data source was set and
	  initialized.  Now, you can force the buffer to allocate inside the
	  Initialize() call by passing in a valid audio format.  If you pass
	  in NULL, the old behavior is achieved.

	* XBox Voice - Fixed a problem where XBox voice was not reporting its
	  playing state properly.  The object was sometimes reporting
	  "playing" even though the client had called Stop().  The problem was
	  due to an inconsistency in the DirectSound API where the semantics of
	  Stop() changed to be asyncronous and you had to poll the hardware to
	  find out exactly when it really had stopped.  This behavior was
	  inconsistent with the semantics of the radsound interface and was cause
	  logic problems in platform independent systems.  Now if you call Stop()
	  the voice reports that it is stopped event though it takes a few ms to
	  actually stop the hardware.

April 26, 2002 RWS

    * !New Interface! - Created IRadSoundWmaFileDataSource (radsound_xbox.hpp).  
      This is an xbox specific component that allows .wma (XBox soundtrack) files 
      to be played in radsound.  
      
      This component behave much like IRadSoundFileDataSources.  

      IRadSoundWmaFileDataSources are initialized with and IRadFile.  
      Note that the IRadFile can be created from filenames or from the song
      file HANDLE that is returned by the XBox soundtrack interface.

      Also note, pass "false" as the second paramter of 
      "HANDLE WINAPI XOpenSoundtrackSong( DWORD SongId, BOOL fAsyncMode );"
      This is a requirement of the xbox wma decoder that lives inside of
      IRadSoundWmaFileDataSource.

    * Changed argument types for IRadSoundHalBuffer::ClearAsync from unsigned 
      long to unsigned int

April 19, 2002 TH

	* Identified the radSoundHeader read buffer to the memory monitor.  We should
	  design the system so the COMPILER catches these problems!

April 17, 2002 TH

	* !Interface Change! - IRadSoundHalSystem::InitializeMemory().  You must
	  now specify the maximum number of allocations that your application will
	  do in the root region.  This change was to save to avoid fragmentation
	  of main memory and to achieve a more static memory-map for sound objects.

	* !Interface Change! - IRadSoundHalMemoryRegion::CreateChildRegion( ).
	  You must now specify the maximum number of allocations your application
	  will make in this region. (See commend above ).

April 16, 2002 TH

	* Gcn soundsystem now goes through ftechs memoryspacealloc system rather
	  than using ARAlloc( ) directly.  ARAlloc( ) was a stack allocator, not
	  a heap.  FTech now takes control of aram and wraps it with an external
	  heap object.

April 15, 2002 TH

	* Fix bug in memorydatasource where it was not calling back with zero
	  bytes if the datasource was empty.  This was causing an assert during
	  the async copy of zero bytes on some platforms.  The async copy system
	  should probably handle copying zero bytes, but nevertheless this is
	  a good check to add in sound.

April 04, 2002 TH

	* Ps2 - change hard coded "magic" alignment numbers to radcore's
	  radMemorySpace_OptimalAlignment && radMemorySpace_OptimalMultiple.

-------------------------------------------------------------------------------
Version: 3.7
Date:    April 03, 2002 (FTech 3.2)
-------------------------------------------------------------------------------

April 02, 2002 TH
	
	* Upgrade to April XDK.  Previous versions of the XDK are no longer
	  supported due to required changes in the .dsp files.

April 1, 2002 -TH

	* Created renamewavregions.exe and renamewavregions_gui.exe.  This tool
	  will the rename the regions of a wave file with names in a text file.
	  This allows composers to load a huge dialog session .wav file into
	  SoundForge, quickly mark off all of the good takes, then rename the 
	  selected takes with the correct names from the dialog script...


April 1, 2002 - RWS

    radsound.irx  (!IOP Module recompiled!)
    --------------------------------------
        * Make sure that the new radsound.irx makes it into your pipeline!!!
    
        * Added IRadSoundIopPs2::DebugVerifySpuRange( ) function to the iop 
          module, which verifies the integrity of a range of sound memory by  
          searching for valid loop and end bits in the data.

        * Simplified setting of loop bits for non-looping data (performance
          increase for non-looping clips)


    WavToRsd
    --------
        * Removed an unnecessary row of zeros from ps2 VAG .rsd files


    radSoundHalSystem
    -----------------
        * Initialize hardware with default effect to fix bug
	
-------------------------------------------------------------------------------
Version: 3.6 
Date:    March 13, 2002 - (Ftech 3.1)
-------------------------------------------------------------------------------
(!Patch!) March 20, 2002 -TH

	radSoundVoiceGcn
	----------------
		* Fix problem where voice's playing state was not reflecting the true
		  state of the voice.

	radSoundPoolObject
	------------------

		* allocator paramenter was not being passed in to radMemoryCreatePool.
		  The memory pools initialize had a default parameter of RADMEMORY_
		  ALLOC_DEFAULT.  This is the problem with default parameters.
		   
(!Patch!) March 19, 2002 -TH

	IRadSoundHalVoice::SetPriority()/IRadSoundPlayer::SetPriority( )
	----------------------------------------------------------------

		* SetPriority() is now implemented on the gamecube.  Priority is now
		  from 0 to 10, where 10 is the lowest.  Please note that you must set
		  the priority of your sound players so that the most important
		  sounds have a higher priority.  The gamecube hardware can drop
		  voices for any reason, thus you are required to think about voice
		  priority.  Just because a voice is playing doesn't mean that it
		  will keep playing--The gamecube hardware will kill the OLDEST voice
		  of the same or lower priority which means music, which tends to get
		  started at the beginning and never stop, will probably be the "oldest"
		  voice--Obviously, a bad situation.

	radSoundVoiceGcn
	----------------

		* Fix AXFreeVoice() debugger and DSP overload crash.  It turns out that
		  the gamecube will drop NO_DROP voices if it gets overloaded.  Further,
		  debugging can cause the DSP to think that it is getting overloaded.
		  To fix the problem we install an VoiceDrop interrupt handler that
		  tags the voice as dead.  The Gcn voice logic now only sets the
		  hardware during Update() once per frame with interrupts disabled.

(!Patch!) March 14, 2002 - TH

	radSoundAsyncLoader/ClearerGcn
	------------------------------

		* Put these objects in a pool.

	radSoundVoiceGcn
	----------------

		* Fix logic error in out of voices logic that was causing an
		  assert() in the gamecube libraries.

	
	radSoundUpdateObject
	--------------------

		* Fixed memory leak freeing objects derived form this class.
		* Fixed allocator not being set properly in base class.

	radSoundUpdatableObject
	-----------------------

		* Fixed problem where the update list would get corrupted if an object
		  adds or remove itself from the list during its update call. 

March 13, 2002 -TH


	radSoundFileDataSource
	----------------------

		* Added warning printout when the game is reading a file, without
		  knowing the audio format.  This lets the game programmer know that
		  he has incurred one extra seek per file.

	radSoundDataCache
	-----------------

		* You can now call GetDataSource( ) on the data cache BEFORE it has
		  been initialized or before it has finished initializing.  This hides
		  all async activity from the user of the data cache system.

	radSoundStitchedDataSource
	--------------------------

		* Fixed an ugly problem where stitcher wasn't preserving the memory
		  space to read data into.  This showed up on the ps2 as a read to
		  iop that actually got read into the EE's code area.

March 13, 2002 -RWS

    !Interface Changes!
    -------------------

        * IRadSoundHalSystem::InitializeMemory takes another parameter, 
          unsigned int playbackRate.  This exposes the gamecube's support of 
          32kHz or 48 kHz playback modes.  (gamcube -> set to 48000 or 32000.
          xbox, pc, ps2 -> set to 0)

    radSoundMath
    ------------

        * Added function radSoundIsSampleRateOptimal( ) that calculates if
          the ratio of a source sampling rate to the playback sampling rate
          will easily converted and played back without artifacts


    WavToRsd Tool
    -------------

        * Added check for optimal sampling rates of the source file.

    radSoundRegisterFactories
    -------------------------
        
        * Registers all implemented gcn effects and xbox effects

March 11, 2002 -TH

	radSoundStreamPlayer
	--------------------

		* Fix problem where multiple clear requests were being issued and
		  was causing the request pool to grow.

	radSoundHalBuffer (ps2)
	-----------------
		
		* Fix problem where clear requests wern't cancelling properly and
		  were calling back into the client object.


March 8, 2002 -TH

    !Interface Changes!
    -------------------

		* Added "char * pIdentifier" parameters to IRadSoundClip::Initialize(),
		  IRadSoundStreamPlayer::Initialize(), IRadSoundDataCache::Initialzie(),
		  IRadSoundMemorySpaceObject::Initialize(),
		  and IRadSoundBufferedDataSource::Initialize()  This is so we can
		  track sound memory usage in a useful way.  This name is displayed
		  in the memory monitor.  Also if you run out of sound memory at run-
		  time a "core-dump" of sound memory will print out the state of
		  sound memory, including fragmented free space blocks

        * Removed IRadSoundHalSystem::GetTimerList( ).  Games must now
          supply their own update/timer mechanism.  Sound now uses an
		  internal update list instead of timers for efficiency.

		* Removed radSoundUtilEventSequencer, radSoundPlayList, and
		  radSoundJukebox components.  These systems have been replaced
		  by radmusic.

	Memory Monitor
	--------------

    * Added hooks for memory monitor: all sound heaps, pools, and
      allocations in all memory spaces are named in the memory monitor
	  display.


March 5, 2002 -TH

    !Interface Changes!
    -------------------
        
        * Removed IRadSoundBufferedDataSource::Flush( ).  Now call
          IRadSoundBufferedDataSource->SetInputDataSource( pNewDataSource ).
          This simplified game usage and library logic.

        * Add IRadSoundHalBuffer::CancelAsyncOperations( ).  You can now insure
          that no spurrious GetFramesAsync() calls will be made by the buffer
          after you call this function.  On most platforms the hardware can
          only service one load operation at a time.  When multiple copy
          operations are issued, they are stored in a queue and not started
          immediately.  This function will flush any oustanding loads from
          this load queue.  If the load has allready been issued it will
          not be stopped.

    BufferedDataSource
    ------------------

        * Better fix for radSoundBufferDataSource::SetInputDataSource( ) bug
          below after testing under harsh conditions.

        * Re-using the same buffered data source is now reliable.
        
March 4, 2002 -TH

    BufferDataSource
    ----------------

        * Fixed bug where SetInputDataSource( ) would only work the first time.
          This was preventing re-use of the BufferedDataSource object which
          is certainly recommended practice.
    

February 27, 2002 TH

    Tools
    -----

        * Cleaned up wavtorsd.dll and wavtorsd.exe.  The command line tool is
          now responsible for recursing directories and issuing multiple
          convertfile request to the .dll.  The .dll now only builds single
          files.  Also, the conversion function is now well defined with
          typed IRadSoundHalAudioFormat::Encoding parameters.

    radSoundHalDataCache
    --------------------

        * Added the ability specify the allocator to use to allocate the cache
          memory.  Previously the libraries hard-coded RADMEMORY_ALLOC_DEFAULT.

February 27, 2002 RS

    * Changed win32 lib and samples to build with multithreaded c runtime library

February 22, 2002 RS

    Interface Changes (for environmental effects support)
    -----------------------------------------------------
        
        * IRadSoundHalListener now includes Set/GetEnvEffectsEnabled( ) &
          Set/GetEnvironmnetAuxSend( )

        * IRadSoundHalPositionalGroup now include Set/GetOcclusion( ) &
          Set/GetObstruction( )

        * IRadSoundHalEffect no longer contains any function


    Environmental Effects Usage Notes
    ---------------------------------

        * Allows you to define the accoustics of the listener's environment
          in terms of an effect.  This effect is then applied to all positional
          sounds.

        * Create an platform specific effect instance and initialize with
          desired values

        * Attach the effect to an aux send 'X' using IRadSoundHalSystem::SetAuxEffect( )

        * Enabled the environmental effects using IRadSoundHalListener::SetEnvEffectsEnabled( ).
          Specify that the environmental effect is attached to aux send 'X' using 
          IRadSoundHalListener::SetEnvironmentAuxSend( )

        * Positional sounds (i.e. players and voices) can no longer specify 
          aux gains, aux modes, etc.  These features are managed internally by 
          environmental effects system.  [Non-positional sounds can still use these
          features]

        * On PS2 and Gamecube, use any effect as the environmental effect.
          On XBox, you can only use IRadSoundHalEffectI3DL2ReverbXBox (see below)

        * Positional groups now include the concepts of occlusion and obstruction.  They are
          both measured from 0.0->1.0.  (Where 1.0 means 100% occluded or obstructed)

          Obstruction is the muffling of sound by an object between the 
          listener and the source, contained within a common environment 
          (like a room). 

          Occlusion is the muffling of sound by a partition or wall 
          separating two environments. 

          The difference between these two cases is explained by split a sound into
          two components, a reverb signal and a direct signal.  The reverb signal reaches
          the listener by bouncing off of walls, etc.  The direct signal reaches the listener
          directly.  Obstruction affects the direct signal without affecting the reverb signal.
          Occlusion affects both.


                  Obstruction             Occlusion
                ==============          ==============
                =   Source   =          =   Source   =
                =   /  |     =          =   /  |     =
                = /    |     =          = /    |     =
                =/     |     =          =/     |     =
                =\  ======   =          ==============
                = \          =          =            =
                =  \         =          =            =
                =  Listener  =          =  Listener  =
                ==============          ==============



    Effects Support XBox
    --------------------

        * Implemented effects on XBox
        * Replaced effects image file dsstdfx.bin with rsdeffects.bin
        * Implemented the following effects:
            - Distortion (IRadSoundHalEffectDistortionXBox)
            - Reverb (IRadSoundHalEffectI3DL2ReverbXBox)
            - Echo (IRadSoundHalEffectEchoXBox)
        * Defined these interfaces in the new file (radsound/inc/radsound_xbox.hpp)


February 12, 2002 TH

    * Fixed minor problem in radMemorySpaceObject where the alignment parameter
      was being ignored in the Initialize() method.  On some platforms, this
      problem was causing the file system to read non-optimally and thus
      warnings were bing printed to the console.

February 7, 2002 RWS

    * Where required, added check for RAD_XXXXXX preprocessor definitions 
      in library interface files


-------------------------------------------------------------------------------
Version: 3.5b
Date: Feb 5, 2002
-------------------------------------------------------------------------------

Feb 4, 2002
    
    XBOX
    ----
        * Changed the radSoundHalPositionalGroup to support DECEMBER XBOX XDK.
          Users of pre-December XDK can ignore these changes by FTECH_PRE_DEC_XDK 
          to their preprocessor definitions


-------------------------------------------------------------------------------
Version: 3.5
Date: Dec 4, 2002
-------------------------------------------------------------------------------

Dec 3, 2001

    XBOX
    ----
        
        * Made changes in voice.cpp in Radsound/src/hal to incorporate the new November 
          Xbox SDK.  By default, the changes are effective, so make sure the new SDK is
          installed.  Define _OLDBINK in preprocessor only if using the old SDK; it is 
          tied with the Bink version as well.  The preprocessor option is to ease the 
          transition and will be eventually removed.  The changelist is 3347.

Dec 4, 2001

    radsound
    --------

        * Add IRadSoundClip::SetPlaybackPosition()
        
        IRadSoundHalDataSource
        ----------------------

            * Change IRadSoundHalDataSource::IsInitialized() to ::GetState( ).
              This was necessary to allow the game to gracefully handle missing
              files.  The three valid states are:

                Initializing - The stream is initializaing.
                Initialized  - The stream is intializied and read to be used
                Error        - There was an error initializing the stream.

    
    radsoundmath
    ------------
        
        * All calculations based on MIDI instrument standard DSL concave transform

Dec 5, 2001

    radsound
    --------

        * Added IRadSoundMemoryDataSource component.  This component wraps a
          piece of memory with an IRadSoundHalDataSourceInterface.

        * Added IRadSoundDataCache component.  The component will load and
          cache a piece of sound data in any platform memory space.  The
          component serves up memory data sources on this memory.  This is
          usefull for caching streaming audio loops in ram.

Dec 5, 2001

    radsound
    --------

        IRadSoundFileDataSource
        -----------------------

            * Added a IRadSoundHalAudioFormat parameter to the file data source
              initialize.  Now, if you know the format of the data you can pass
              it in and the file data source won't read the header.  This means
              one less seek per file.

January 3, 2002

    * Added Ps2 Metrowerks Code Warrior build.

January 4, 2002

    * Removed ugly old sample program.  "simple sample" still exists and can be
      used as a reference.

January 9, 2002

    * Fix problem when stitcher was Reset() an existing file request from
      an old load would cause logic problems.

January 10, 2002

    * Got simplesound sample program to build for all platforms

    * Fixed ps2 sound effects so that they can be turned off by
          setting the auxeffect to be NULL in IRadSoundHalSystem::SetAuxEffect( )

    * Fix problem where memorydatasource wouldn't call back on a load if it
      got release during an operation.  This was causing the clients to wait
      forever.

    * More fixes for stitcher Reset() (see January 9th above).


January 24, 2002

    * Aligned FTech preprocessor directives with Pure3D.  It is important to use the new directives in the 
      makefile and Project Settings.  The changes are as follows:-

       - PS2EE -> RAD_PS2
       - GCN -> RAD_GAMECUBE
       - WIN32 -> RAD_WIN32
       - _XBOX -> RAD_XBOX
       - RELEASE -> RAD_RELEASE
       - TUNE -> RAD_TUNE
       - DEBUG -> RAD_DEBUG


January 25, 2002

    * Ps2 Sound System now waits for all IOP remote commands and DMA transfers
      to complete before terminating.  This insures that all sounds on the
      ps2 are stopped and internal sound system objects are cleaned up
      before the application exits.

    * GameCube radSoundHalSystemTerminate( ) now spins waiting until all DMA
      and load requests have terminated.

    * Ps2 sample programs compile and run with Metrowerks

    * Padded radFileHeader structure to avoid "File position is not a multiple
      of 32 bytes..." messages on the GameCube.

    * Removed legacy radSoundDumpStreamMemory() and radSoundDumpClipMemory( )
      from radsound.hpp

    * Added more/better comments to radsound.hpp, radsound_hal.hpp

-------------------------------------------------------------------------------
Version: 3.4
Date: ????????
-------------------------------------------------------------------------------

    Overview:
    --------

        The input data system has been redesigned with versatility and modularity
        in mind.  The input source to the clip/stream player and ultimately the
        buffer object can now be made up of a chain of data sources.  For example,
        if you wan't to stitch seemlessly you can set up your objects like so:

        radFile1 --> fileDs \
        radFile2 --> fileDs --> StitchedDs --> BufferedDs --> StreamPlayer
        radFile3 --> fileDs /

        Here we are wrapping .rsd files to stitch with the fileDataSource
        component and feeding them into the stitched data source.  The output
        of the stitched data source is buffered (to compensate for file access
        and frame rate latencies ) and the buffered output is fed to the streamer.

        Note that the data-source model is a proper "PULL" model where the
        stream player calls back the buffered data source when it needs data, and
        the buffered data source calls back the stitcher when it needs to
        replenish its buffer, etc.


    radsound_hal mods
    -----------------

        IRadSoundHalAudioFormat (new interface)
        ---------------------------------------

            * Decoupled audio format from .rsd file format.  The radSoundHeader
              class has been split up into radSoundHeader (now jsut the file
              header) structure and the IRadSoundHalAudioFormat class/interface
              which  can be filled up using the file header info but is no coupled
              to it in any way.  You can now specify audio formats
              programatically.

        IRadSoundHalDataSource ( new abstract interface )
        ----------------------

            * The radsoundsystem gets all of its data through
              IRadSoundHalDataSource derived classes.

            * This interface generally appears where the IRadFile interface
              appeared in the previous versions.  This interface is the basis
              for the new streamer "plug-in-chain" architecture (See below).
              Radsound is longer is coupled to the radfile/drive system.
              We provide a component that wraps the IRadFile with the new
              IRadSoundHalDataSource interface.

            * This is a very narrow interface with only 4 functions.

        IRadSoundHalBuffer
        ------------------

            * Initialize( ) - Buffer size is now specified in frames.  This is
              the smallest logical unit of data that can be played back.  This
              change was to solve problems where the user would specify sizes
              that were not frame multiples.

            * LoadAsync( ) - Now loads from a IRadSoundHalDataSource and
              sizes are now specified in frames, not samples to avoid round-off
              problems.

            * ClearAsync( ) - Clear sizes are now in frames.

        IRadSoundHalVoice
        -----------------

            * SetPosition( ), SetVelocity( ), SetMinMaxDistance( ), and other
              positional functions have been removed and encapsulated into a
              IRadSoundHalPositionalGroup interface which is set with
              SetPositionalGroup( ).  See below for IRadSoundHalPositionalGroup( )
              information.

        IRadSoundHalPositionalGroup ( new interface )
        ---------------------------------------------

            * All positional information was encapsulated into this class/
              interface.  Create a positional group and Set it on the voice,
              clip player, or stream player.  You can now have one positional
              group for sounds with the same positional attributes.  This
              saves computational speed, simplifies usage, and reduced the
              number of functions in the "player" interface.

        IRadSoundHalSystem
        ------------------

            * GetReferenceClock( ) added to interface, but it is currently NOT
              implemented.

            * AddToLoadQueue( ) and CurrentLoadComplete( ) have been removed 
              from the interface.  The system no longer provides an internal
              load queue.

        IRadSoundHalSystemLoadQueueCallback 
        -----------------------------------

            * This callback is no longer required.  IRadSoundHalSystem does
              not provide an internal sound load queue.


    radsound mods
    -------------

        IRadSoundPlayer
        ---------------

            * Players no longer support "Playing until done".  Play() no
              longer receives a boolean argument.

        IRadSoundClip
        -------------

            * Clients of IRadSoundClip must managed file loading queues as 
              this is no longer handled internally

            * GetFormat( ) details the clips audio format.


        IRadSoundClipPlayer
        -------------------

            * SetPositionalGroup() function added and positional functions
              removed.  (See positional group discussion above).

        IRadSoundStreamPlayer
        ---------------------

            * The streaming was the main focus of this version's changes.  The
              stream player now reads from IRadSoundHalData source derived
              components.             
              
            * SetPositionalGroup() function added and positional functions
              removed.  (See positional group discussion above).

            * Initialize( ) and InitializeAsync( ) replaces SetBufferSize( )
              and SetMemoryRegion.  Initialize( ) reserves memory right away,
              but you must know the format of the audio.  InitializeAsync( )
              allocates buffer memory after the stream is initialized (once the
              data source has been initialized and the audio format is
              determined from the input source.

            * Reset( ) function added to force the stream to re-queue.

            * Set/GetDataSource( ) replaces Set/GetFile( ) and
              Set/GetStreamFile( ).

        IRadSoundStitchedDataSource ( new interface )
        ---------------------------------------------

            * This component allows you to stich together other data sources
              in a seempless (sample accurate) manner.

        IRadSoundBufferedDataSource ( new interface )
        ---------------------------------------------

            * This component allows you to buffer sound data in ANY memory
              space on the target system (PS2: EE, IOP, or SOUND, GCN:
              MAIN or ARAM).

            * You should insert this buffered data source between the
              the file data source and the stream player.

        IRadSoundFileDataSource ( new interface )
        -----------------------------------------

            * Wraps a IRadFile with the IRadSoundHalDataSource interface.  This
              component knows how to read .rsd disk files.  It is recommened
              that games use .rsd files as input and not try to glue them
              into larger archive files.

--------------------------------------------------------------------------------
Version: 3.3b
Date:    Sept. 28
--------------------------------------------------------------------------------

    All
    ---

        Output Modes
        ------------

            * enum radSoundOutputMode added radSoundOutputMode_Surround.
              This option enabled panning to the rear speakers on the game
              cube.  On xbox/win32/ps2 this option is equivalient to
              radSoundOutputMode_Stereo.

            * Ps2/GCN improve positional sound panning to maitain a
              constant power curve.

            * Some optomizations of the software listener.  Two cos's
              removed per calculation + you can now disable the
              positional calculations on some platforms (PS2 always and
              and GCN in stereo mode.)
        Math
        ----

            * Abstracted all math-library calls into wrapper functions
              for profiling and future integration with radmath.
            
            * Add math::radSoundPanVolumePowerConstant( ).  This maintains a
              constant power curve when panning.  That is, when panned
              to the center the left and right volumes are halved (~3db).

            * Rename radSoundPanToPanFactors( ) to radSoundPanVolumePower( ).
              Name describes function better.
            
            * Add radSoundPowerToAmplitude( ) and radSoundAmplitudetToPower( ).
              Makes code more self-documenting.

        Sample Program
        --------------

            * Display of controller button commands at start up (yay!)      

    GCN
    ---
        *** Surround sound support. (Pro-logic).  Enable with
          radSoundSystem::SetOutputMode( radSoundOutputMode_Surround ).

        * Fixed NULL-Aux-Callback system.  Was bogging down game just
          writing zeros.  Into the aux send.

        * Optomizations of volume/aux/surround volumes.

    XBOX
    ----
        
        * Removed heap-allocation of positional-information structure to
          reduce fragmentation.

    PS2
    ---
        
        Voice
        -----

            * Volume calculation optomizations.  Better continuous power 
              curve on positional pan.  


--------------------------------------------------------------------------------
Version: 3.3a
Date:    Sept. 27
--------------------------------------------------------------------------------

    All
    ---

        * IRadSoundHalBuffer::GetMemoryObject( ) added.  Needed this function
          to solve the GCN ADPCM streamer buffer realloc problem.

    GCN
    ---

        * Fixed problem with needlessly reallocating streamer buffers when
          changing songs using GCN ADPCM.

        * Removed "NULL" effect from libraries.  This function bogged down
          the CPU needlessly.

        * Fixed bug where mono mode only worked for stereo samples.

--------------------------------------------------------------------------------
Version: 3.3
Date:    September 24
--------------------------------------------------------------------------------

    GCN
    ---

        * GCN DSP-ADPCM supported.

--------------------------------------------------------------------------------
Version: 3.1g
Date:    Sept. 15
--------------------------------------------------------------------------------

    radSound
    --------

        * StreamPlayer
          ------------

            * Removed IRadSoudnStreamPlayer::Stopping state.  It was complicating
              game logic and was not very useful.
              

    GCN
    ---
    
        * SoundSystem
          -----------
          
            * Initializea() now reads the rom audio mode (stereo/mono) and sets
              up the current mode to match.  When the game sets the audio mode,
              the rom as updated.  A gamecube game should never save the state
              of the audio mode on the memory card, but query radsound for this
              setting.            

--------------------------------------------------------------------------------
Version: 3.1f
Date:    Sept. 6
--------------------------------------------------------------------------------

    All
    ---
    
        HalSystem
        ---------
        
            * Add Set/GetInputMode() to switch from stereo to mono sound.  Note
              that on XBox and Win32 this function is ignored.  Users must
              control this param from the XBox dashboard.         
              
--------------------------------------------------------------------------------
Version: 3.1e
Date:    Sept. 6
--------------------------------------------------------------------------------
           
    Gcn
    ---
        
        HalVoice
        --------

            * Fixed release build spin in initialize by adding volatile
              keyword to ARQRequest.

    Ps2
    ---

        * Moved all of sound loading to Dma Channel 0 to avoid movie player
          conflicts.
         
--------------------------------------------------------------------------------
Version: 3.1d
Date:    Sept. 4
--------------------------------------------------------------------------------
              
    Gcn
    ---
    
        HalVoice
        --------
        
            * Clicks and Pops fixed(!) - Stopped Using Nintendo's buggy
              higher-level MIX libraries which were corrupting their own
              libraries internally.
              
            * Non looping voices now loop into a special silent buffer in ARAM
              for the remainder of a sound frame (5ms).  This should stop some
              tail-end clicks.
              
            * Addad a forced positional calculation before playing voice to
              remove yet more volume popping artifacts.
              
            * Running out of physical hardware voices in now handled
              correctly.  (Used to assert)
              
        HalSystem
        ---------
        
            * GetStats() is now implemented

        softwarelistener
        ----------------
        
            * Re-implemented rolloff factor for sound falloff over distance.

--------------------------------------------------------------------------------
Version: 3.1c
Date:    Sept. 1
--------------------------------------------------------------------------------

    Ps2
    ---

        HalVoice
        --------

            * Fixed bug in priority voice management.

        HalBuffer
        ---------

            * Fixed assert() where a large sound memory transfer attempted to
              overrun the Iop transfer buffer.

--------------------------------------------------------------------------------
Version: 3.1b
Date: Aug, 28
--------------------------------------------------------------------------------

    All
    ---

        StreamPlayer
        ------------

            * Fixed problem where voice was started before new file was queued
              when switching streams quickly

            * Streamer now switches file priority when queueing to Low and
              when Playing/Stopping to High.
              
--------------------------------------------------------------------------------
Version: 3.1a
Date:    Aug, 26
--------------------------------------------------------------------------------

    All
    ---

        * Added GetReferenceClock() to IRadSoundPlayer interface use this
          realtime millisecond value to sync your Nis's.

--------------------------------------------------------------------------------
Version: 3.1
Date:    Aug, 20 - 23
--------------------------------------------------------------------------------

    All
    ---

        * add radSoundDumpClipMemory() and radSoundDumpStreamMemroy() functions
          
    PS2
    ---

        * radSoundHalVoice - fix problem with ps2 not freeing second voice
          of stereo pair.

--------------------------------------------------------------------------------
Version: 3.05e
Date: Aug, 20 - 23
--------------------------------------------------------------------------------

    PS2 and GCN
    -----------

        * Adjusting software listener and PS2 voices to sound like
          the XBOX. (ch 2859)
        * Optimizing sound calculations

    Util
    ----

        * Add IRadSoundPlayListItem.  Now you can update a song's trim in
          real-time.

    Interface
    ---------

        *--> interface changes (backwards compatible) <--*

            * Added SetFile and GetFile for passing an IRadFile
              directly into the streamer (ch 2869)

--------------------------------------------------------------------------------
Version: 3.05d
Date:    Aug, 14 - 17
--------------------------------------------------------------------------------

    xbox
    ----

        * Set Voice Headroom to 0 by default to match ps2.

    all
    ---

        tools
        -----

        * wavtorsd.exe add switch to report samples over a given sampling
        rate.

        stream player
        -------------

            * Added "out of streamplayer memory" debugging message.
    
--------------------------------------------------------------------------------
Version: 3.05c
Date:    Aug, 9
--------------------------------------------------------------------------------

    all
    ---
        * Got SoundSystem::Stats() working again on all platforms except
          game-cube.

--------------------------------------------------------------------------------
Version: 3.05b
--------------------------------------------------------------------------------

    all
    ---
        * Fix trim not being set in clip player if clip not set when SetTrim()
          was called.  This bug always existed on the game cube, but migrated
          to other platforms with the 3.05 "hal" release.

--------------------------------------------------------------------------------
Version: 3.05a
--------------------------------------------------------------------------------
        
    util
    ----

        * Added radSoundUtilEventSequencer

    all
    ---
        * Fixed timer leak when playing a clip player "until-done".  This
          bug always existed on the game cube, but migrated to other
          platforms with the 3.05 "hal" release.

--------------------------------------------------------------------------------
Version: 3.05
--------------------------------------------------------------------------------

    public interface change overview
    -------------------------
    
        * IRadSoundListener        --> IRadSoundHalListener
        * IRadSoundSystem          --> IRadSoundHalSystem
        * IRadSoundMemoryRegion    --> IRadSoundHalMemoryRegion
        * IRadSoundEffect          --> IRadSoundHalEffect
        * radSoundListenerGet      --> radSoundHalListenerGet
        * radSoundSystemGet        --> radSoundHalSystemGet
        * radSoundSystemInitialize --> radSoundHalSystemInitialize
        * radSoundSystemTerminate  --> radSoundHalSystemTerminate


        !*! IRadSoundSystem::Stats   --> IRadSoundHalSystem::Stats
          - members changed dramatically to report voice/buffer
            info not clip/stream info.  Clip/Stream info support
            will return in a future version.

    all
    ---     
        * Move to 3 layer library structure.
            o radsound_hal  - RadSound core hardware-abstraction layer.
            o radsound      - RadSound base libraries.
            o radsound_util - RadSound utility libraries.

    win32
    -----

        * Memory regions are truly simulated, that is, memory allocations
          will now fail a'la XBox on a windows Box.

--------------------------------------------------------------------------------
Version: 3.0 (Beta6)
Date:    Aug 8
--------------------------------------------------------------------------------        


    all
    ---
        * Preliminary port of voice and buffer object to _hal layer.  Clip,
          ClipPlayer, and Streamer are now platform independent.

    gcn
    ---
        
        * ClipPlayer: Fix crash setting trim when no clip was set.

    ps2
    ---

        * Fix circular reference between effect and soundsystem.
        * Fix memory leak not freeing region system.

--------------------------------------------------------------------------------
Version: 3.0 (Beta4)
Date:    July 27
--------------------------------------------------------------------------------

    all platforms
    -------------

        * Fix problem in juke-box where setting NULL playlist asserted.
        * added radSoundRandMinMax to sound-math

    gcn
    ---
        * Fix problems with gcn clip player crashing during destruction
        
--------------------------------------------------------------------------------
Version: 3.0 (Beta3) 
Date:    July 24
--------------------------------------------------------------------------------
    
    all platforms
    -------------
    
        * Fixed problem with memory regions not serving up alignment memory.
                        
    xbox
    ----

        * Aligned all data to 32 bit boundry to fix garbage in ADPCM playback
        * Fix problem in clip player where Playing a Queueing-for-play clip
          went into play state.
        * Fix: Clip player remains in QueuedPlay state after clip was loaded
          under some conditions.
    
    gcn
    ---
    
        * Added Delay Effect (not yet tested)
    
    ps2
    ---
    
        * Fixed infinite loop in voice priority AttemptKillVoice() function.

--------------------------------------------------------------------------------
Version: 3.0 (Beta2)
Date:    July 20
--------------------------------------------------------------------------------

    xbox
    ----

        * Add Support for XBox ADPCM, use wavtorsd.exe -xadpcm flag to
          build data.

--------------------------------------------------------------------------------
Version: 3.0 (Beta1)
Date:    July 13
--------------------------------------------------------------------------------

    interface changes
    -----------------
    
        *--> interface changes (non-backwards compatible) <--*

            * UnRegister????( ) callback unregistration methods on all
              sound objects now has the same signature as the corresponding
              regestration function.  All parameters were needed to uniquely
              identify the regestered callback.

            * IRadSoundStreamPlayer::Play( ) now takes [bool playUntilDone]
              as a required parameter.

            * IRadSoundSystem::InitMemory( ) was added.
            * IRadSoundSystem::ServceOncePerFrame( ) MUST be called, obvioulsy,
              once per frame.  Call this function after all of the player's
              positions and velocities have been set.
              IRadSoundSystem::Service( ) should be called as often as posible.           

            * IRadSoundListener::UpdatePositionalSettings( ) should
              NEVER be called explicitly by the game.


    *--> interface changes (backwards compatible) <--*

            * IRadSoundStreamPlayer and IRadSoundClipPlayer now derive from
              IRadSoundPlayer.  This allows the game better abstraction from
              exactly what it is they are playing

    *--> interface additions (backwards compatible) <--*

            * IRadSoundPlayer::SetPriority( int ) was added.  Default 
              is priority 0.  The system does a simple less-than greater-
              than tests on this value to determine harware resource priority.

            * IRadSoundMemoryRegion interface and component was added.
              (see notes below)

            * IRadSoundClip::Set/GetMemoryRegion( ) and
              IRadSoundStreamPlayer::Set/GetMemoryRegion( ) was added.
              (see notes below)

            * IRadSoundEffect base interface for all effects added
            * IRadSoundSystem::Set/GetAuxEffect added.
            * IRadSoundSystem::Set/GetAUxGain added
            * IRadSoundPlayer::Set/GetAuxGain added.


              
    file format changes
    -------------------
        
        * WavToRsd.exe generates files that are incompatible with previous
          version the first four characters of these files in now RSD2
          instead of RSD1.  The run-time code currently does NO checking.   
                
    common
    ------
        
        * Added voice management interface on all platforms.  The system
          will attempt to stop a voice of positional voice lower priority
          or of equal priority and farther away, or just a voice with lower
          priority in the case of non-positional samples.

        * Added abstract, and platform dependent effects.

        * Fixed memory corruption crash caused by setting a new stream file
          before the previos stream file's header was read. (all platforms)

        * Added Juke box component that handles smooth fades when switching
          streamer songs.

        * Added "sound memory regions".  Memory regions allow you to set up
          a memory tree structure and explicity allocate sound data into
          this tree.  By default, the sound system sets up a root tree node
          that is the size of the parameter passed to
          IRadSoundSystem::InitMemory( ). Call,
          IRadSoundSytem::GetRootMemoryRegion( ) to access this default
          object.  Nont that this memorySize MUST BE 0 ON THE PS2.
          The radSoundClip, and the radSoundStreamPlayer now have
          functions to set and get the memory region that they should use
          to store "wav" data.

        * util function added to dump current sound memory region usage.

        * Added IRadSoundSystem::Stats::m_TotalFreeSoundMemory


    ps2
    ---

        * Fixed backwards panning on mono playback, (stereo was ok).
        * Smart voice management that considers aux effects usage.
        * Added support for all harware effects using new effects interface

    gcn
    ---
        
        * Added support for standard reverb, more effects to come
        * Game cube requires "may sound patch" in T:\devsys to function
          correctly.  There was a bug in nintendo's libraries that
          caused the voice position to stop working if the voice's
          trim was set, go figure!?!

    xbox
    ----

        * July XDX fully supported.
        * StreamPlayer volume bug fixed.  Previously, setting the trim would
          not update the total volume until SetVolume( ) was called.

------------------------------------------------------------------------------
Version: 2.6 
------------------------------------------------------------------------------

    ps2
    ---
        * Major performance improvements

    gamecube
    --------

        * Gamecube is now fully supported.
        * Supports pc/xbox data by doing endian conversion at run
          time.
        * Wavtorsd.exe will build native gamecube big endian data.
        
    tools
    -----
        
        * radTuner (see radscript) has undergone major improvements.
        * wavtorsd.exe has been updated to build gamecube native data.

------------------------------------------------------------------------------
Version: 2.5
------------------------------------------------------------------------------

    radSoundStreamPlayer
    --------------------

        * All Platforms: End of stream detection now is sample accurate.
        * Stiching is still not implemented.

    radSoundClipPlayer
    ------------------
        
        * Win32, Ps2: Clip's trim setting is now applied properly, previously
          the clip player's trim had to be set before the clip's trim was
          applied.

    Ps2
    ---

        * Iop to Spu Dma is now asyncronous, more optomizations to come.

    Other
    -----
        
        * Preliminary ScriptTune.exe allows integrated run-time tuning and
          object/attribute specification. (see radscript project)
    

==============================================================================
Version: 2.0
==============================================================================

    General
    -------

        * rsound layer removed, radsound is now the interface to which all
          platform specific code is written.

    Dependencies
    ------------

        * Now uses radcore, not rfc as core library, radftech is finally
          obsolete.
        * radsound utility library, (radsoundutil) is dependent on radscript.

    Interface
    ---------

        * Streamer and clip player states have changed and are more
          representative of the streamer's semantic behavior.

        * radsound utilities now in their own header radsoundutil.hpp and are
          functionally de-coupled from radsound.  We could create a true
          radsoundutil.lib if games desire this.

        * sound math functions have been removed from radsound.hpp and put
          in radsoundmath.hpp.  Sound will continue to use the radSoundVector,
          which is castable to a rmt::Vector util pure3d and radmath or
          completely decoupled.

    radsoundutil
    ------------

        * Add PlayList component

==============================================================================
Version 1.0, 1.01
==============================================================================

    General
    -------
        
        * RadSound replaces fSound and fSeg, but it still built upon the
          rsound layer.

        * Built upon rfc as the core platform library.

        * Was developed using M2 as a test-bed and V1.01 is fully functionaly
          and proven stable on all platforms in a game situation.



