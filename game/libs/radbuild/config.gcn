##########################################################################
#
#  Configuration specific: GameCube RadCore Configuation file
#
##########################################################################

########################################################################
#
# Setup build type 
#
########################################################################

DEFINES += RAD_GAMECUBE RAD_CONSOLE

ifeq ($(CONFIG),RELEASE)
EXT = gr
DEFINES += NRAD_DEBUG RAD_RELEASE
COMPILERFLAGS += -g -O4,s -inline auto
	ifeq ($(BUILDPAL), TRUE)
		OBJDIR = PALRelease
	else
		ifeq ($(BUILDE3), TRUE)
			OBJDIR = E3Release
		else
			OBJDIR = Release
		endif
	endif
endif

ifeq ($(CONFIG),DEBUG)
EXT = gd
DEFINES += RAD_DEBUG
COMPILERFLAGS += -g -opt off -inline off
	ifeq ($(BUILDPAL), TRUE)
		OBJDIR = PALDebug
	else
		ifeq ($(BUILDE3), TRUE)
			OBJDIR = E3Debug
		else
			OBJDIR = Debug
		endif
	endif
DEBUG=1
endif

ifeq ($(CONFIG),TUNE)
EXT = gt
DEFINES += NRAD_DEBUG RAD_TUNE
COMPILERFLAGS += -g -O4,p -inline auto
	ifeq ($(BUILDPAL), TRUE)
		OBJDIR = PALTune
	else
		ifeq ($(BUILDE3), TRUE)
			OBJDIR = E3Tune
		else
			OBJDIR = Tune
		endif
	endif
endif


########################################################################
#
# Setup cross compiler for target platform.
#
########################################################################
PLATFORM = GCN
DEFINES += RAD_GAMECUBE RAD_CONSOLE

########################################################################
#
# Setup file extension name
#
########################################################################
ifeq ($(TARGETTYPE), LIBRARY)
PLAT_EXT  = a
else
PLAT_EXT  = elf
endif

##########################################################################
# Compiler tools
##########################################################################
# MWDIR		top level directory of Metrowerks CodeWarrior product
# CWFOLDER	environment variable installed by CodeWarrior installation
# MWCLDIR	command line tool directory
# MWLIBDIR	standard C library directory
# CC AS LD AR	command line tools
# MWINCS	standard library includes
# MWLIBS	standard libraries + EABI libraries

#MWDIR	 := $(subst Program ,progra~1,$(subst Files,,$(CWFOLDER)))
MWDIR	 := $(subst Program Files,progra~1,$(CWFOLDER))
MWCLDIR	 = $(MWDIR)/PowerPC_EABI_Tools/Command_Line_Tools
MWLIBDIR = $(subst $(space),\$(space),$(subst \,/,$(MWDIR)/PowerPC_EABI_Support))
MWINCS   = -ir $(MWDIR)/PowerPC_EABI_Support/Msl

#
# Don't go screwing around with the quotation marks in these commands
# some need it, some don't it's a mess, just leave it alone
#

CC	= $(MWCLDIR)/mwcceppc.exe
DP      = $(ROOTDIR)/radbuild/GlobalTools/makedepend.exe
AS	= $(MWCLDIR)/mwasmeppc.exe
LD	= $(MWCLDIR)/mwldeppc.exe
AR	= $(MWCLDIR)/mwldeppc.exe
PERL = $(ROOTDIR)/radbuild/GlobalTools/Perl.exe
FIXDEP = $(ROOTDIR)/radbuild/fixdep.pl

##########################################################################
# DOLPHIN SDK
##########################################################################
# SDKINC	SDK library include path
# SDKLIBDIR	SDK library path
# SDKLIB_NAME	base name of SDK libraries used during linking
# SDKLIBS	converted names of SDK libraries used on the linker command line
# DOLPHIN_ROOT environment variable installed by Dolphin SDK, usually //c/DolphinSDK1.0

DS_A := $(DOLPHIN_ROOT://c=c:)
DS_B := $(DS_A://c=c:)
DS_A := $(DS_B://d=d:)
DS_B := $(DS_A://e=e:)
DS_A := $(DS_B://f=f:)
DS_B := $(DS_A://g=g:)
DS_A := $(DS_B://t=t:)
DOLPHIN_SDK_ROOT := $(DS_A)
	
SDKINC	= -i- \
           -I$(DOLPHIN_SDK_ROOT)/include


##########################################################################
# HARDWARE FLAGS
##########################################################################


HWCONFIG = -D$(DOLPHIN_PLATFORM)	\
           -DMARLIN=DI	\
           -D__HWSIM=0	\
           -DORCA	\
           -DGEKKO	\
           -DGX_REV=2	\
           -DPLATFORM=$(DOLPHIN_PLATFORM)	\
           -DGX_NO_LEGACY_HW1 \
           -DBUG_CLR_LOAD_DLY

##########################################################################
# DEPDENCIES FLAGS
##########################################################################
# DPFLAG		dependencies flag
# DPPREPROCFLAGS	preproc c flag
# DPPREPROCXXFLAGS	prepro cxx flag

DPFLAG   = -D__IEEE_LITTLE_ENDIAN
DPPREPROCFLAGS = $(OPTFLAGS) $(PLAT_INCS) $(HWCONFIG)
DPPREPROCXXFLAGS = $(OPTFLAGS) $(PLAT_INCS) $(HWCONFIG)
##########################################################################
# COMPILE FLAGS
##########################################################################
# PLAT_INCS	include flags
# OPTFLAGS	optiona flags
# CXXFLAGS	CPP compiler flags
# CFLAGS	C compiler flags

PLAT_INCS	= $(SDKINC) $(MWINCS)

ifndef DEBUG
	DBGFLAG	= -DNDEBUG -O4,s -inline auto
else
	DBGFLAG = -opt off -D_DEBUG -inline off
endif

OPTFLAGS = -c \
	-msgstyle gcc \
	-nodefaults \
	-align powerpc \
	-enum int \
	-proc gekko \
	-fp hardware \
	-maf on \
	-Cpp_exceptions off \
	-DEPPC \
	-nosyspath \
	-char signed \
	-w on, pragmas, nocmdline, noempty, nopossible, nounused, extracomma, pedantic, nohidevirtual, noimplicit, nonotinlined,largeargs, structclass, padding, nonotused, nounusedexpr, ptrintconv \
	$(DBGFLAG)


CXXFLAGS = $(OPTFLAGS) $(PLAT_INCS) $(HWCONFIG) $(COMPILERFLAGS)
CFLAGS   = $(OPTFLAGS) $(PLAT_INCS) $(HWCONFIG) $(COMPILERFLAGS)

##########################################################################
# LINKER FLAGS
##########################################################################
# LDFLAGS	linker flags
# LCF		linker command file

ifeq ($(CONFIG),RELEASE)
	LDFLAGS = -nodefaults -g -fp hardware -msgstyle gcc
	VER = 
endif

ifeq ($(TARGETTYPE),LIBRARY)
	DEBUG_OPTIMIZATIONFLAG =
else
	DEBUG_OPTIMIZATIONFLAG =
endif

ifeq ($(CONFIG), DEBUG)
	COMPILERFLAGS = -g $(DEBUG_OPTIMIZATIONFLAG)
endif

ifeq ($(CONFIG),DEBUG)
	LDFLAGS = -nodefaults -g -fp hardware -msgstyle gcc
	VER = d
endif

ifeq ($(CONFIG),TUNE)
	LDFLAGS	= -nodefaults -g -fp hardware -msgstyle gcc
	VER = 
endif

ifeq ($(TARGETTYPE),LIBRARY)
	LDFLAGS += -library
endif

LINKERCMDFILE	= $(DOLPHIN_SDK_ROOT)/include/dolphin/eppc.$(DOLPHIN_PLATFORM).lcf

LCF	= -lcf $(LINKERCMDFILE)

# make sure to leave a empty line at the end of included files

#####################################################################
#
# RAD_GAMECUBE INCLUDES & RAD_GAMECUBE LIBRARIES
#
#####################################################################

INCLUDEDIR += \
	$(DOLPHIN_SDK_ROOT)/include \
	$(DOLPHIN_SDK_ROOT)/include/dolphin \
	$(MWDIR)/PowerPC_EABI_Support/Runtime/Inc \
	$(MWDIR)/PowerPC_EABI_Support/Msl \
	$(MWDIR)/PowerPC_EABI_Support/Msl/MSL_C/MSL_Common/Include \
	$(MWDIR)/PowerPC_EABI_Support/Msl/MSL_C/PPC_EABI/Include \
	$(MWDIR)/PowerPC_EABI_Support/Msl/MSL_C++/MSL_Common/Include

#This is for the AMC DDH

ifdef AMCDDKBIN
	AMCLIBS   = $(subst \,/,$(AMCDDKBIN))/../lib/AmcExi2.a
	AMCSDK    = amcnotstub
else
	AMCLIBS   =
	AMCSDK    = amcstubs
endif # AMCDDKBIN

#This is for the NPDP devices (GDEV)

ifdef ODEMUSDKBIN
	ODELIBS   = $(subst \,/,$(ODEMUSDKBIN))/../lib/odemuexi2.a
	ODESDK    = odenotstub
else  # ODEMUSDKBIN
	ODELIBS  =
	ODESDK    = odemustubs
endif # ODEMUSDKBIN

SDKLIBNAMES = \
               base \
               os \
               db \
               mtx \
               dvd \
               vi \
               pad  \
               ai   \
               ar   \
               ax   \
               axfx \
               mix  \
               syn  \
               seq  \
               dsp  \
               dtk  \
               card \
               hio	 \
               mcc  \
               gx \
               vmbase \
               vm \
               texPalette \
               fileCache \
               support \
               amcnotstub \
               odenotstub \
               si \
               exi \
               kbd \
               lg \
               $(AMCSDK) \
               $(ODESDK)

#SDKLIBS = -L$(DOLPHIN_SDK_ROOT)/$(DOLPHIN_PLATFORM)/lib \
#	$(addsuffix $(VERSION).a, $(addprefix -l, $(SDKLIBNAMES)))

SDKLIBS = -L$(DOLPHIN_SDK_ROOT)/$(DOLPHIN_PLATFORM)/lib \
	$(addsuffix $(VER).a, $(addprefix -l, $(SDKLIBNAMES))) \

LIBS +=	$(MWLIBDIR)/Metrotrk/TRK_MINNOW_DOLPHIN.a \
		$(MWLIBDIR)/Runtime/lib/Runtime.PPCEABI.H.a \
		$(MWLIBDIR)/Msl/MSL_C/PPC_EABI/LIB/MSL_C.PPCEABI.bare.H.a \
		$(MWLIBDIR)/Msl/MSL_C++/PPC_EABI/LIB/MSL_C++.PPCEABI.bare.H.a \
		$(AMCLIBS) \
		$(ODELIBS)




