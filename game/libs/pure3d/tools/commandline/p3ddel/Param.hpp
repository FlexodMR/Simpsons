/*===========================================================================
    Automatically generated by Jeeves, don't edit.  Edit p3ddel.sc instead

    File: Param.hpp 

    Command line parameters for p3ddel

       This tool deletes chunks from P3D files, either by chunk ID, or by name.

    Copyright (c) 2015 Radical Entertainment, Inc.  All rights reserved.

===========================================================================*/

#ifndef _PARAM_HPP
#define _PARAM_HPP

#include "tlTable.hpp"
#include "tlStringTable.hpp"

class tFile;
class tlDataChunk;

class Parameters
{

public:
    tlStringTable Files;

    Parameters(int argc, char* argv[]);
    ~Parameters();

    void          ShortUsage();                  //: Print a short usage message
    void          Usage();                       //: Print a usage message
    void          VersionHistory(int count = 1); //: Print version history
    tlDataChunk*  HistoryChunk();                //: Return a File History chunk

    // Tool specific parameters

   tlTable<int>  DeleteList             ;//: Delete chunks matching ID 
   tlTable<int>  KeepList               ;//: Keep chunks matching ID (deleting
                                        //   everything else)
   tlStringTable MeshDeletePattern      ;//: Delete geometries matching Pattern
   tlStringTable MeshKeepPattern        ;//: Delete geometries not matching
                                        //   Pattern
   tlStringTable SkinDeletePattern      ;//: Delete skins matching Pattern
   tlStringTable SkinKeepPattern        ;//: Delete skins not matching Pattern
   tlStringTable CompositeDeletePattern ;//: Delete composite drawables matching 
                                        //  Pattern
   tlStringTable CompositeKeepPattern   ;//: Delete composite drawables not
                                        //   matching Pattern
   tlStringTable MaterialDeletePattern  ;//: Delete materials / shaders matching 
                                        //  Pattern
   tlStringTable MaterialKeepPattern    ;//: Delete materials / shaders not
                                        //   matching Pattern
   tlStringTable TextureDeletePattern   ;//: Delete textures matching Pattern
   tlStringTable TextureKeepPattern     ;//: Delete textures not matching Pattern
   tlStringTable AnimDeletePattern      ;//: Delete animations matching Pattern
   tlStringTable AnimKeepPattern        ;//: Delete animations not matching
                                        //   Pattern
   char*         OutFile                ;//: Write output to File.
   int           DelDuplicate           ;//: Delete duplicate chunks (just
                                        //   compares names by default)
   int           CompareEverything      ;//: Check entire contents when removing 
                                        //  duplicate chunks
   int           CompareID              ;//: Check chunk ID when removing
                                        //   duplicate chunks (overrides -E)

    // Standard parameters implemented by all tools

    int         Verbosity;                    //: How much noise should this program make?
    int         WriteHistory;                 //: Should the tool write a history chunk?

private:

   void filebuildup(char* filename);

   bool     isPattern;
   bool     Recurse;
   char* FilePattern;

    int      Argc;
    char**   Argv;
};

extern Parameters* Param;

#endif
