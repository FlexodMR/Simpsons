// Copyright (C) 2000 Radical Entertainment
// 
// Name:   p3dDeformExpressionUI.mel
// Author: Bryan Brandt
//
// Description: Expression Deformation tool UI
//


// Callback when "Create Group" button is clicked
//
global proc p3dDeformExpressionUICreateGroup()
{
   string $sel[] = `ls -sl`;
   int $sel_count = size($sel);

   if($sel_count < 1)
   {
      error "No mesh selected";
   }  
   else if($sel_count >1)
   {
      error "Only one mesh should be selected";
   }
   
   p3dDeformExpressionGroupCreate;
   p3dDeformSetupNoCreate;
   
   
}


// Callback when "Set Neutral" button is clicked
//
global proc p3dDeformExpressionUISetNeutral()
{
   string $sel[] = `ls -sl -tr -s`; //only allow setting neutral on shapes or transform nodes
   int $sel_count = size($sel);

   if($sel_count < 1)
   {
      error "No mesh selected";
   }  
   else if($sel_count >1)
   {
      error "Only one mesh should be selected";
   }
   
   string $msg = "Do you want to change the neutral shape for the mesh?";
   string $yesno = `confirmDialog -title "Confirm" -message $msg
                      -button "Yes" -button "No" -defaultButton "Yes"
                      -cancelButton "No" -dismissString "No"`;
         
   if ($yesno == "No")
   {
      return;
   }

   p3dDeformMeshNeutralUpdate $sel[0];
}

// Creates the Expression Deformer UI window
//
proc p3dDeformExpressionUIWindowCreate(string $tabs)
{
   if (!`formLayout -exists p3dDeformExpressionForm`)
   {
      formLayout -p $tabs p3dDeformExpressionForm;
   
      tabLayout -edit
                -tabLabel p3dDeformExpressionForm "Animation"
                $tabs;
   }

      if(`scrollLayout -exists p3dDeformExpressionScrollForm`)
      {
         deleteUI -layout p3dDeformExpressionScrollForm;
      }
      scrollLayout -cr true
                     -p p3dDeformExpressionForm
                      p3dDeformExpressionScrollForm;
      

         if(!`columnLayout -exists p3dDeformExpressionScrollColumnForm`)
         {
               columnLayout -columnAttach "both" 0
                         -adj true
                         -p p3dDeformExpressionScrollForm
                         p3dDeformExpressionScrollColumnForm;
         }

         setParent ..;
      setParent ..;

   
   formLayout -e
              -af p3dDeformExpressionScrollForm top 0
              -af p3dDeformExpressionScrollForm bottom 5
              -af p3dDeformExpressionScrollForm left 0
              -af p3dDeformExpressionScrollForm right 0
              p3dDeformExpressionForm;
}


// Launch the Deform Expression UI window
// - main entry point
//
global proc p3dDeformExpressionUI(string $tabs)
{
   p3dDeformExpressionUIWindowCreate($tabs);
   p3dDeformExpressionUIGroupPopulate;
}


global proc p3dDeformExpressionUINoCreate()
{
}

// End of file.
